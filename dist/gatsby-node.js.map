{"version":3,"sources":["../src/gatsby-node.ts"],"names":["coreSupportsOnPluginInit","isGatsbyNodeLifecycleSupported","require","e","console","error","initializePluginLifeCycleName","INITIALIZE_PLUGIN_LIFECYCLE_NAME_MAP","module","exports","steps","setGatsbyApiToState","setErrorMap","tempPreventMultipleInstances","pluginOptionsSchema","createSchemaCustomization","ensurePluginRequirementsAreMet","ingestRemoteSchema","sourceNodes","persistPreviouslyCachedImages","setImageNodeIdCache","onPreExtractQueries","onPreExtractQueriesInvokeLeftoverPreviewCallbacks","onPostBuild","logPostBuildWarnings","onCreatePage","onCreatepageSavePreviewNodeIdToPageDependency","onCreatePageRespondToPreviewStatusQuery","onCreateDevServer","startPollingForContentUpdates"],"mappings":";;AAAA;;AACA;;AACA;;;;;;AAEA,IAAIA,wBAAJ;;AAEA,IAAI;AACF,QAAM;AAAEC,IAAAA;AAAF,MAAqCC,OAAO,CAAE,qBAAF,CAAlD;;AACA,MAAID,8BAA8B,CAAE,cAAF,CAAlC,EAAoD;AAClDD,IAAAA,wBAAwB,GAAI,QAA5B;AACD,GAFD,MAEO,IAAIC,8BAA8B,CAAE,uBAAF,CAAlC,EAA6D;AAClED,IAAAA,wBAAwB,GAAI,UAA5B;AACD;AACF,CAPD,CAOE,OAAOG,CAAP,EAAU;AACVC,EAAAA,OAAO,CAACC,KAAR,CAAe,2DAAf;AACD;;AAED,MAAMC,6BAAqC,GACzCC,gDAAqCP,wBAArC,KAAmE,WADrE;AAGAQ,MAAM,CAACC,OAAP,GAAiB,8BAAe;AAC9B,GAACH,6BAAD,GAAiC,CAC/BI,KAAK,CAACC,mBADyB,EAE/BD,KAAK,CAACE,WAFyB,EAG/BF,KAAK,CAACG,4BAHyB,CADH;AAO9BC,EAAAA,mBAAmB,EAAEJ,KAAK,CAACI,mBAPG;AAS9BC,EAAAA,yBAAyB,EAAE,CACzBL,KAAK,CAACC,mBADmB,EAEzBD,KAAK,CAACM,8BAFmB,EAGzBN,KAAK,CAACO,kBAHmB,EAIzBP,KAAK,CAACK,yBAJmB,CATG;AAgB9BG,EAAAA,WAAW,EAAE,CACXR,KAAK,CAACC,mBADK,EAEXD,KAAK,CAACS,6BAFK,EAGXT,KAAK,CAACQ,WAHK,EAIXR,KAAK,CAACU,mBAJK,CAhBiB;AAuB9BC,EAAAA,mBAAmB,EAAE,CACnBX,KAAK,CAACY,iDADa,CAvBS;AA2B9BC,EAAAA,WAAW,EAAE,CAACb,KAAK,CAACU,mBAAP,EAA4BV,KAAK,CAACc,oBAAlC,CA3BiB;AA6B9BC,EAAAA,YAAY,EAAE,CACZf,KAAK,CAACgB,6CADM,EAEZhB,KAAK,CAACiB,uCAFM,CA7BgB;AAkC9BC,EAAAA,iBAAiB,EAAE,CACjBlB,KAAK,CAACU,mBADW,EAEjBV,KAAK,CAACc,oBAFW,EAGjBd,KAAK,CAACmB,6BAHW;AAlCW,CAAf,CAAjB","sourcesContent":["import { runApisInSteps } from \"./utils/run-steps\"\nimport * as steps from \"./steps\"\nimport { INITIALIZE_PLUGIN_LIFECYCLE_NAME_MAP } from \"./constants\"\n\nlet coreSupportsOnPluginInit: `unstable` | `stable` | undefined\n\ntry {\n  const { isGatsbyNodeLifecycleSupported } = require(`gatsby-plugin-utils`)\n  if (isGatsbyNodeLifecycleSupported(`onPluginInit`)) {\n    coreSupportsOnPluginInit = `stable`\n  } else if (isGatsbyNodeLifecycleSupported(`unstable_onPluginInit`)) {\n    coreSupportsOnPluginInit = `unstable`\n  }\n} catch (e) {\n  console.error(`Could not check if Gatsby supports onPluginInit lifecycle`)\n}\n\nconst initializePluginLifeCycleName: string =\n  INITIALIZE_PLUGIN_LIFECYCLE_NAME_MAP[coreSupportsOnPluginInit] || `onPreInit`\n\nmodule.exports = runApisInSteps({\n  [initializePluginLifeCycleName]: [\n    steps.setGatsbyApiToState,\n    steps.setErrorMap,\n    steps.tempPreventMultipleInstances,\n  ],\n\n  pluginOptionsSchema: steps.pluginOptionsSchema,\n\n  createSchemaCustomization: [\n    steps.setGatsbyApiToState,\n    steps.ensurePluginRequirementsAreMet,\n    steps.ingestRemoteSchema,\n    steps.createSchemaCustomization,\n  ],\n\n  sourceNodes: [\n    steps.setGatsbyApiToState,\n    steps.persistPreviouslyCachedImages,\n    steps.sourceNodes,\n    steps.setImageNodeIdCache,\n  ],\n\n  onPreExtractQueries: [\n    steps.onPreExtractQueriesInvokeLeftoverPreviewCallbacks,\n  ],\n\n  onPostBuild: [steps.setImageNodeIdCache, steps.logPostBuildWarnings],\n\n  onCreatePage: [\n    steps.onCreatepageSavePreviewNodeIdToPageDependency,\n    steps.onCreatePageRespondToPreviewStatusQuery,\n  ],\n\n  onCreateDevServer: [\n    steps.setImageNodeIdCache,\n    steps.logPostBuildWarnings,\n    steps.startPollingForContentUpdates,\n  ],\n})\n"],"file":"gatsby-node.js"}